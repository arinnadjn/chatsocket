import threading
import socket
LOG_FILE = 'log.txt'
def print_last_n_messages(log_path: str, n: int):
    with open(log_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()
        last_n_lines = lines[-n:]  # Выбираем последние n строк из файла
        for line in last_n_lines:
            print(line.strip())  # Выводим каждую строку без символов новой строки
def save_msg(log_path: str, msg: str):
    with open(log_path, 'a', encoding='utf-8') as f:
        f.write(f'{msg}\n')
def receive(client: socket.socket):
    while True:
        try:
            msg = client.recv(1024).decode('utf-8')
            if not msg:
                break
            save_msg(LOG_FILE, msg)
            print(msg)
        except ConnectionResetError:
            print("Соединение с сервером разорвано.")
            break
def write(client: socket.socket):
    while True:
        msg = input()
        if msg.lower() == "exit":
            client.send("exit".encode('utf-8'))
            break
        save_msg(LOG_FILE, msg)
        client.send(msg.encode('utf-8'))
def main():
    server_ip = input("Введите IP адрес сервера: ")
    server_port = int(input("Введите порт сервера: "))
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
        try:
            client_socket.connect((server_ip, server_port))
            nickname = input("Введите ваш никнейм: ")
            client_socket.send(nickname.encode())
            receive_thread = threading.Thread(target=receive, args=(client_socket,))
            receive_thread.start()
            write_thread = threading.Thread(target=write, args=(client_socket,))
            write_thread.start()
            receive_thread.join()
            write_thread.join()
        except ConnectionRefusedError:
            print("Не удалось подключиться к серверу.")
if __name__ == "__main__":
    main()

